syntax = "proto3";

package t3.v1;

import "external/v1/external.proto";
import "google/api/annotations.proto";

option java_multiple_files = true;

/**
 * Transaction Service
 *
 * This service is responsible for providing clients a way to backup their
 * trusted transparent transactions, and to query the results by the
 * transaction identifier.
 *
 * Note: Requires authentication to use any of these rpcs.
 */
service TransactionService {
  // Retrieve one or many T3 Transactions
  rpc FindTransactions(FindTransactionsRequest) returns (FindTransactionsResponse) {
    option (google.api.http) = {
      post: "/lookup"
    };
  }

  // List transactions
  rpc ListTransactions(ListTransactionsRequest) returns (ListTransactionsResponse) {
    option (google.api.http) = {
      get: "/list"
      additional_bindings: {
        post: "/list"
      }
    };
  }

  // Create a T3 transaction
  rpc CreateTransaction(CreateTransactionRequest) returns (CreateTransactionResponse) {
    option (google.api.http) = {
      post: "/create"
    };
  }

  rpc TestError(TestErrorRequest) returns (TestErrorResponse) {}
}

// T3 Transaction Data Type
message TransparentTransaction {
  // Address hash of the sender
  bytes sender_address_hash = 1;

  // Address hash of the recipient
  bytes recipient_address_hash = 2;

  // The token ID of this transaction
  // Note: Kotlin maps uint64 to Long. There is no loss of precision, but conversion
  //       needs to be performed to recover the original value.
  uint64 token_id = 3;

  // The amount of this transaction, in the base units of the aforementioned token_id.
  uint64 amount = 4;

  // The transaction identifier (tx_pubkey) corresponding to the TxOut in the blockchain represented by this transaction, as bytes.
  external.v1.CompressedRistretto public_key = 5 [deprecated = true];

  // The transaction identifier (tx_pubkey) corresponding to the TxOut in the blockchain represented by this transaction, as a hex-encoded string.
  string public_key_hex = 7;

  // When this transaction was created, as seconds since Unix epoch.
  uint64 created_at = 6;

  repeated CrossChainSwap cross_chain_swaps = 8;

  // Identity of who reported this transaction to T3 (see ReporterType enum for types of reporters)
  // The reporter value holds a human readable name of the entity reporting the transaction but is empty for SENTZ type.
  string reporter_identity = 9;
  ReporterType reporter_type = 10;

  // If one or more parties of the transaction are known institutions include their identifier here
  // If none, then the value is set to NONE
  KnownInstitution sender_institution = 11;
  KnownInstitution recipient_institution = 12;

  // Collected directly from the blockchain, ignored during CreateTransaction
  // When this transaction was written to the blockchain, as seconds since Unix epoch.
  uint64 block_time = 13;
  // Block number
  uint64 block_index = 14;

  // The direction of the transaction from the perspective of the reporter.
  // Ex. if the direction is 'SEND' then the sender_address_hash belongs to the reporter of the transaction data.
  ReportedDirection reported_direction = 15;
}

message CrossChainSwap {
  AssetDetails src = 1;
  AssetDetails dest = 2;
  AssetDetails fee = 3;
  // Chain specific ID, e.g. an ETH transaction hash.
  string external_id = 4;
}

message AssetDetails {
  Asset asset = 1;
  string amount = 2;
  string address = 3;
  KnownInstitution institution = 4;
}

// TODO: Share/Dedupe definition with Twix
enum Asset {
  // Must update enum file in entities/Asset.kt
  ASSET_UNSPECIFIED = 0;
  ASSET_MOBILECOIN = 1;
  ASSET_BTC = 2;
  ASSET_ETH = 3;
  ASSET_USDT_TRON = 4;
  ASSET_USDT_ETHEREUM = 5;
  ASSET_TRX = 6;
  ASSET_USD = 7;
  ASSET_USDC_ETHEREUM = 8;
  ASSET_BUSD_BEP20 = 9;
  ASSET_USDC_POLYGON = 10;
  ASSET_MATIC = 11;
  ASSET_EUR = 12;
  ASSET_GBP = 13;
  ASSET_CAD = 14;
  ASSET_AUD = 15;
  ASSET_BGN = 16;
  ASSET_BRL = 17;
  ASSET_CHF = 18;
  ASSET_CNY = 19;
  ASSET_COP = 20;
  ASSET_CZK = 21;
  ASSET_DKK = 22;
  ASSET_DOP = 23;
  ASSET_EGP = 24;
  ASSET_HKD = 25;
  ASSET_IDR = 26;
  ASSET_ILS = 27;
  ASSET_JOD = 28;
  ASSET_JPY = 29;
  ASSET_KES = 30;
  ASSET_KRW = 31;
  ASSET_KWD = 32;
  ASSET_LKR = 33;
  ASSET_MAD = 34;
  ASSET_MXN = 35;
  ASSET_MYR = 36;
  ASSET_NGN = 37;
  ASSET_NOK = 38;
  ASSET_NZD = 39;
  ASSET_OMR = 40;
  ASSET_PEN = 41;
  ASSET_PKR = 42;
  ASSET_PLN = 43;
  ASSET_RON = 44;
  ASSET_SEK = 45;
  ASSET_THB = 46;
  ASSET_TRY = 47;
  ASSET_TWD = 48;
  ASSET_VND = 49;
  ASSET_ZAR = 50;
  ASSET_USDT_POLYGON = 51;
  ASSET_INR = 52;
  ASSET_PHP = 53;
  ASSET_USDC_POLYGON_NON_POS = 54;
  ASSET_ARS = 55;
  ASSET_CLP = 56;
  ASSET_BDT = 57;
  ASSET_SGD = 58;
  ASSET_MMK = 59;
  ASSET_BMD = 60;
  ASSET_UAH = 61;
  ASSET_HUF = 62;
  ASSET_VEF = 63;
  ASSET_SAR = 64;
  ASSET_RUB = 65;
  ASSET_AED = 66;
  ASSET_BHD = 67;
  ASSET_AFN = 68;
  ASSET_ALL = 69;
  ASSET_AMD = 70;
  ASSET_ANG = 71;
  ASSET_AOA = 72;
  ASSET_AWG = 73;
  ASSET_AZN = 74;
  ASSET_BAM = 75;
  ASSET_BBD = 76;
  ASSET_BIF = 77;
  ASSET_BND = 78;
  ASSET_BOB = 79;
  ASSET_BSD = 80;
  ASSET_BTN = 81;
  ASSET_BWP = 82;
  ASSET_BYN = 83;
  ASSET_BZD = 84;
  ASSET_CDF = 85;
  ASSET_CLF = 86;
  ASSET_CNH = 87;
  ASSET_CRC = 88;
  ASSET_CUC = 89;
  ASSET_CUP = 90;
  ASSET_CVE = 91;
  ASSET_DJF = 92;
  ASSET_DZD = 93;
  ASSET_ERN = 94;
  ASSET_ETB = 95;
  ASSET_FJD = 96;
  ASSET_FKP = 97;
  ASSET_GEL = 98;
  ASSET_GGP = 99;
  ASSET_GHS = 100;
  ASSET_GIP = 101;
  ASSET_GMD = 102;
  ASSET_GNF = 103;
  ASSET_GTQ = 104;
  ASSET_GYD = 105;
  ASSET_HNL = 106;
  ASSET_HRK = 107;
  ASSET_HTG = 108;
  ASSET_IMP = 109;
  ASSET_IQD = 110;
  ASSET_IRR = 111;
  ASSET_ISK = 112;
  ASSET_JEP = 113;
  ASSET_JMD = 114;
  ASSET_KGS = 115;
  ASSET_KHR = 116;
  ASSET_KMF = 117;
  ASSET_KPW = 118;
  ASSET_KYD = 119;
  ASSET_KZT = 120;
  ASSET_LAK = 121;
  ASSET_LBP = 122;
  ASSET_LRD = 123;
  ASSET_LSL = 124;
  ASSET_LYD = 125;
  ASSET_MDL = 126;
  ASSET_MGA = 127;
  ASSET_MKD = 128;
  ASSET_MNT = 129;
  ASSET_MOP = 130;
  ASSET_MRU = 131;
  ASSET_MUR = 132;
  ASSET_MVR = 133;
  ASSET_MWK = 134;
  ASSET_MZN = 135;
  ASSET_NAD = 136;
  ASSET_NIO = 137;
  ASSET_NPR = 138;
  ASSET_PAB = 139;
  ASSET_PGK = 140;
  ASSET_PYG = 141;
  ASSET_QAR = 142;
  ASSET_RSD = 143;
  ASSET_RWF = 144;
  ASSET_SBD = 145;
  ASSET_SCR = 146;
  ASSET_SDG = 147;
  ASSET_SHP = 148;
  ASSET_SLL = 149;
  ASSET_SOS = 150;
  ASSET_SRD = 151;
  ASSET_SSP = 152;
  ASSET_STN = 153;
  ASSET_SVC = 154;
  ASSET_SYP = 155;
  ASSET_SZL = 156;
  ASSET_TJS = 157;
  ASSET_TMT = 158;
  ASSET_TND = 159;
  ASSET_TOP = 160;
  ASSET_TTD = 161;
  ASSET_TZS = 162;
  ASSET_UGX = 163;
  ASSET_UYU = 164;
  ASSET_UZS = 165;
  ASSET_VES = 166;
  ASSET_VUV = 167;
  ASSET_WST = 168;
  ASSET_XAF = 169;
  ASSET_XCD = 170;
  ASSET_XOF = 171;
  ASSET_XPF = 172;
  ASSET_YER = 173;
  ASSET_ZMW = 174;
  ASSET_ZWL = 175;
  ASSET_USDT_BEP20 = 176;
  ASSET_BNB = 177;
  ASSET_MOB = 178;
  ASSET_EUSD = 179;
  // Must update enum file in entities/Asset.kt
}

enum ReporterType {
  REPORTER_TYPE_UNSPECIFIED = 0; // Should never occur
  REPORTER_TYPE_MISSING = 1; // Default value during migration of pre-reporter dataset
  REPORTER_TYPE_SENTZ = 2;
  REPORTER_TYPE_API = 3;
}

// Request institutional data.
// Authenticated.
message FindTransactionsRequest {
  // Optional address hash(es) for which to retrieve data
  repeated bytes address_hashes = 1;

  // Optional transaction identifier(s) for which to retrieve data
  repeated external.v1.CompressedRistretto public_keys = 2;

  // Optional hex-encoded transaction identifier(s) for which to retrieve data
  repeated string public_key_hex = 3;

  // Optional address(es) for which to retrieve data
  // Same as using address_hashes but we do the hashing inside T3
  repeated string addresses = 4;
}

message FindTransactionsResponse {
  enum Result {
    RESULT_UNSPECIFIED = 0;
    RESULT_OK = 1;
  }

  Result result = 1;

  // The institutional transaction data
  repeated TransparentTransaction transactions = 2;
}

// Authenticated.
message ListTransactionsRequest {
  // List transactions created since this timestamp (as seconds since Unix epoch).
  // Defaults to 24 hours ago.
  uint64 created_since = 1;
}

message ListTransactionsResponse {
  enum Result {
    RESULT_UNSPECIFIED = 0;
    RESULT_OK = 1;
  }

  Result result = 1;

  // The institutional transaction data
  repeated TransparentTransaction transactions = 2;
}

// Store a T3 transaction: Authenticated
message CreateTransactionRequest {
  // The full T3 transaction data for this transaction
  // Ignores created_at, reporter_identity, and reporter_type
  TransparentTransaction transaction = 1;
}

message CreateTransactionResponse {
  enum Result {
    RESULT_UNSPECIFIED = 0;
    RESULT_OK = 1;

    // The public_key already exists in the T3 database
    RESULT_ALREADY_EXISTS = 2;
  }

  Result result = 1;
  TransparentTransaction transaction = 2;
}

message TestErrorRequest {
  int32 code = 1;
}
message TestErrorResponse {
}

enum KnownInstitution {
  KNOWN_INSTITUTION_UNSPECIFIED = 0;
  KNOWN_INSTITUTION_NONE = 1;
  KNOWN_INSTITUTION_MIXIN = 2;
  KNOWN_INSTITUTION_MOONPAY = 3;
  KNOWN_INSTITUTION_PAYBIS = 4;
  KNOWN_INSTITUTION_BINANCE = 5;
  KNOWN_INSTITUTION_XENDBRIDGE = 6;
  KNOWN_INSTITUTION_FUSPAY = 7;
  KNOWN_INSTITUTION_MUSSUB = 8;
}

enum ReportedDirection {
  REPORTED_DIRECTION_UNSPECIFIED = 0;
  REPORTED_DIRECTION_SEND = 1;
  REPORTED_DIRECTION_RECEIVE = 2;
}
