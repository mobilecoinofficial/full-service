name: mc-ledger-test

env:
  SGX_MODE: SW
  IAS_MODE: DEV
  RUST_BACKTRACE: full
  MC_SEED: a4aa76e4a5ca70c8447dd544a63f180b5a6fe0aff96495802506354c10f2886e
  IAS_API_KEY: ${{ secrets.SGX_PRIMARY_API_KEY }}
  IAS_SPID: ${{ secrets.SGX_SPID }}

on:
  push:
    branches:
      - setup-mobilecoin

jobs:
  integration-test:
    runs-on: [self-hosted, Linux, large]
    # runs-on: ubuntu-latest
    container:
      image: mobilecoin/rust-sgx-base:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Cache Cargo
        if: steps.artifact_cache.outputs.cache-hit != 'true'
        id: cargo_cache
        uses: actions/cache@v3
        with:
          path: |
            /opt/cargo/bin/
            /opt/cargo/registry/index/
            /opt/cargo/registry/cache/
            /opt/cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ secrets.CACHE_VERSION }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Bootstrap
        id: cache-bootstrap
        uses: actions/cache@v3
        with:
          path: mobilecoin/target/sample-data
          key: ${{ runner.os }}-${{ secrets.CACHE_VERSION }}-bootstrap-${{ hashFiles('**/Cargo.lock') }}

      - name: Bootstrap MobileCoin
        if: steps.cache-bootstrap.outputs.cache-hit != 'true'
        run: |
          mobilecoin/tools/local-network/bootstrap.sh

      - name: Build MobileCoin
        shell: bash
        run: |
          python3 tools/build_mobilecoin.py
      
      - name: Build FullService
        shell: bash
        run: |
          python3 tools/build_full_service.py
      
      - name: Run Integration
        shell: bash
        run: |
          python3 tools/local_network.py --network-type a-b-c

