name: build

env:
  SGX_MODE: HW
  IAS_MODE: PROD
  RUST_BACKTRACE: full
  CONSENSUS_ENCLAVE_CSS: /var/tmp/consensus-enclave.css
  INGEST_ENCLAVE_CSS: /var/tmp/ingest-enclave.css

on:
  push:
    tags:
      - v*

jobs:
  macos:
    runs-on: [self-hosted, macOS]
    permissions:
      contents: write
    outputs:
      prerelease:  ${{ steps.prerelease.outputs.value }}
    strategy:
      matrix:
        include:
          - namespace: test
            network: testnet
          - namespace: prod
            network: mainnet
            
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Brew Bundle
        run: |
          brew update --preinstall
          brew bundle --no-upgrade
      
      - name: Git Submodule
        run: |
          git submodule update --checkout --init --recursive

      # CACHE_VERSION secret is 'date --iso-8601=minutes' and is used to invalidate cache if needed
      - name: Cache Build Binaries
        id: artifact_cache
        uses: actions/cache@v3
        with:
          path: |
            build_artifacts
          key: ${{ runner.os }}-${{ matrix.network }}-${{ secrets.CACHE_VERSION }}-build-cargo-artifacts-${{ hashFiles('**/*.rs', '**/*.proto', '**/Cargo.toml')}}

      - name: Cache Cargo
        if: steps.artifact_cache.outputs.cache-hit != 'true'
        id: cargo_cache
        uses: actions/cache@v3
        with:
          path: |
            /opt/cargo/bin/
            /opt/cargo/registry/index/
            /opt/cargo/registry/cache/
            /opt/cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ secrets.CACHE_VERSION }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Consensus SigStruct
        if: steps.artifact_cache.outputs.cache-hit != 'true'
        run: |
          CONSENSUS_SIGSTRUCT_URI=$(curl -s https://enclave-distribution.${{ matrix.namespace }}.mobilecoin.com/production.json | grep consensus-enclave.css | awk '{print $2}' | tr -d \" | tr -d ,)
          (cd /var/tmp && curl -O https://enclave-distribution.${{ matrix.namespace }}.mobilecoin.com/${CONSENSUS_SIGSTRUCT_URI})

      - name: Ingest SigStruct
        if: steps.artifact_cache.outputs.cache-hit != 'true'
        run: |
          INGEST_SIGSTRUCT_URI=$(curl -s https://enclave-distribution.${{ matrix.namespace }}.mobilecoin.com/production.json | grep ingest-enclave.css | awk '{print $2}' | tr -d \" | tr -d ,)
          (cd /var/tmp && curl -O https://enclave-distribution.${{ matrix.namespace }}.mobilecoin.com/${INGEST_SIGSTRUCT_URI})

      - name: Cargo Build
        if: steps.artifact_cache.outputs.cache-hit != 'true'
        run: |
          cargo build --release

      - name: Copy binaries to cache folder
        if: steps.artifact_cache.outputs.cache-hit != 'true'
        run: |
          mkdir -pv build_artifacts/${{ matrix.network }}/bin
          cp /var/tmp/*.css build_artifacts/${{ matrix.network }}
          cp target/release/full-service build_artifacts/${{ matrix.network }}/bin/

      # Create and Upload an Artifact on Push and Not a Tag
      - name: Create Artifact
        run: |
          mkdir -pv artifact
          cd artifact && tar -czvf ${{ github.sha }}-${{ runner.os }}-${{ matrix.network }}.tar.gz -C ../build_artifacts/${{ matrix.network }}/ .

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: full-service_${{ runner.os }}_${{ matrix.network }}
          path: artifact/${{ github.sha }}-${{ runner.os }}-${{ matrix.network }}.tar.gz

      # Does the tag have the "pre" key word in it? Will mark it as prerelease
      - name: Is Prerelease
        shell: bash
        id: prerelease
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          if [[ "${GITHUB_REF}" =~ pre ]]; then
            echo "::set-output name=value::true"
          else
            echo "::set-output name=value::false"
          fi

      # Only for Tag on Main
      - name: Get Current Pre-Release
        if: startsWith(github.ref, 'refs/tags/v') && steps.prerelease.outputs.value == 'false'
        id: current_release
        uses: joutvhu/get-release@v1
        with:
          debug: true
          latest: true
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Only for Tag on Main
      - name: Download Latest Pre-Release
        if: startsWith(github.ref, 'refs/tags/v') && steps.prerelease.outputs.value == 'false'
        uses: duhow/download-github-release-assets@v1
        with:
          tag: ${{ steps.current_release.outputs.tag_name }}
          files: |
            ${{ steps.current_release.outputs.tag_name }}-${{ runner.os }}-${{ matrix.network }}.tar.gz
          target: /var/tmp/${{ steps.current_release.outputs.tag_name }}-${{ runner.os }}-${{ matrix.network }}.tar.gz

      # Only for Tag on Main
      - name: Extract Release
        if: startsWith(github.ref, 'refs/tags/v') && steps.prerelease.outputs.value == 'false'
        run: |
          rm -rfv build_artifacts/${{ matrix.network }}
          mkdir -pv build_artifacts/${{ matrix.network }}
          tar xzvf /var/tmp/${{ steps.current_release.outputs.tag_name }}-${{ runner.os }}-${{ matrix.network }}.tar.gz -C build_artifacts/${{ matrix.network }}

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          mkdir -pv release
          cd release && tar -czvf ${{ github.ref_name }}-${{ runner.os }}-${{ matrix.network }}.tar.gz -C ../build_artifacts/${{ matrix.network }}/ .

      - name: Generate MD5
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cd release && md5sum ${{ github.ref_name }}-${{ runner.os }}-${{ matrix.network }}.tar.gz > ${{ github.ref_name }}-${{ runner.os }}-${{ matrix.network }}.md5

      - name: Upload Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          prerelease: ${{ steps.prerelease.outputs.value }}
          files: |
            release/${{ github.ref_name }}-${{ runner.os }}-${{ matrix.network }}.tar.gz
            release/${{ github.ref_name }}-${{ runner.os }}-${{ matrix.network }}.md5

  linux:
    runs-on: [self-hosted, Linux, large]
    # Needs write permission for publishing release
    permissions:
      contents: write
    container:
      image: mobilecoin/rust-sgx-base:latest
    outputs:
      prerelease: ${{ steps.prerelease.outputs.value }}
    strategy:
      matrix:
        include:
          - namespace: test
            network: testnet
          - namespace: prod
            network: mainnet

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      # CACHE_VERSION secret is 'date --iso-8601=minutes' and is used to invalidate cache if needed
      - name: Cache Build Binaries
        id: artifact_cache
        uses: actions/cache@v3
        with:
          path: |
            build_artifacts
          key: ${{ runner.os }}-${{ matrix.network }}-${{ secrets.CACHE_VERSION }}-build-cargo-artifacts-${{ hashFiles('**/*.rs', '**/*.proto', '**/Cargo.toml')}}

      - name: Cache Cargo
        if: steps.artifact_cache.outputs.cache-hit != 'true'
        id: cargo_cache
        uses: actions/cache@v3
        with:
          path: |
            /opt/cargo/bin/
            /opt/cargo/registry/index/
            /opt/cargo/registry/cache/
            /opt/cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ secrets.CACHE_VERSION }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Consensus SigStruct
        if: steps.artifact_cache.outputs.cache-hit != 'true'
        run: |
          CONSENSUS_SIGSTRUCT_URI=$(curl -s https://enclave-distribution.${{ matrix.namespace }}.mobilecoin.com/production.json | grep consensus-enclave.css | awk '{print $2}' | tr -d \" | tr -d ,)
          (cd /var/tmp && curl -O https://enclave-distribution.${{ matrix.namespace }}.mobilecoin.com/${CONSENSUS_SIGSTRUCT_URI})

      - name: Ingest SigStruct
        if: steps.artifact_cache.outputs.cache-hit != 'true'
        run: |
          INGEST_SIGSTRUCT_URI=$(curl -s https://enclave-distribution.${{ matrix.namespace }}.mobilecoin.com/production.json | grep ingest-enclave.css | awk '{print $2}' | tr -d \" | tr -d ,)
          (cd /var/tmp && curl -O https://enclave-distribution.${{ matrix.namespace }}.mobilecoin.com/${INGEST_SIGSTRUCT_URI})

      - name: Cargo Build
        if: steps.artifact_cache.outputs.cache-hit != 'true'
        run: |
          cargo build --release

      - name: Copy binaries to cache folder
        if: steps.artifact_cache.outputs.cache-hit != 'true'
        run: |
          mkdir -pv build_artifacts/${{ matrix.network }}/bin
          cp /var/tmp/*.css build_artifacts/${{ matrix.network }}
          cp target/release/full-service build_artifacts/${{ matrix.network }}/bin/

      # Create and Upload an Artifact on Push and Not a Tag
      - name: Create Artifact
        run: |
          mkdir -pv artifact
          cd artifact && tar -czvf ${{ github.sha }}-${{ runner.os }}-${{ matrix.network }}.tar.gz -C ../build_artifacts/${{ matrix.network }}/ .

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: full-service_${{ runner.os }}_${{ matrix.network }}
          path: artifact/${{ github.sha }}-${{ runner.os }}-${{ matrix.network }}.tar.gz

      # Does the tag have the "pre" key word in it? Will mark it as prerelease
      - name: Is Prerelease
        shell: bash
        id: prerelease
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          if [[ "${GITHUB_REF}" =~ pre ]]; then
            echo "::set-output name=value::true"
          else
            echo "::set-output name=value::false"
          fi

      # Only for Tag on Main
      - name: Get Current Pre-Release
        if: startsWith(github.ref, 'refs/tags/v') && steps.prerelease.outputs.value == 'false'
        id: current_release
        uses: joutvhu/get-release@v1
        with:
          debug: true
          latest: true
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Only for Tag on Main
      - name: Download Latest Pre-Release
        if: startsWith(github.ref, 'refs/tags/v') && steps.prerelease.outputs.value == 'false'
        uses: duhow/download-github-release-assets@v1
        with:
          tag: ${{ steps.current_release.outputs.tag_name }}
          files: |
            ${{ steps.current_release.outputs.tag_name }}-${{ runner.os }}-${{ matrix.network }}.tar.gz
          target: /var/tmp/${{ steps.current_release.outputs.tag_name }}-${{ runner.os }}-${{ matrix.network }}.tar.gz

      # Only for Tag on Main
      - name: Extract Release
        if: startsWith(github.ref, 'refs/tags/v') && steps.prerelease.outputs.value == 'false'
        run: |
          rm -rfv build_artifacts/${{ matrix.network }}
          mkdir -pv build_artifacts/${{ matrix.network }}
          tar xzvf /var/tmp/${{ steps.current_release.outputs.tag_name }}-${{ runner.os }}-${{ matrix.network }}.tar.gz -C build_artifacts/${{ matrix.network }}

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          mkdir -pv release
          cd release && tar -czvf ${{ github.ref_name }}-${{ runner.os }}-${{ matrix.network }}.tar.gz -C ../build_artifacts/${{ matrix.network }}/ .

      - name: Generate MD5
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cd release && md5sum ${{ github.ref_name }}-${{ runner.os }}-${{ matrix.network }}.tar.gz > ${{ github.ref_name }}-${{ runner.os }}-${{ matrix.network }}.md5

      - name: Upload Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          prerelease: ${{ steps.prerelease.outputs.value }}
          files: |
            release/${{ github.ref_name }}-${{ runner.os }}-${{ matrix.network }}.tar.gz
            release/${{ github.ref_name }}-${{ runner.os }}-${{ matrix.network }}.md5
